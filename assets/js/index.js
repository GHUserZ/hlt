/**主页 */
define(function (require, exports, module) {
  require('echarts');
  (function(){
    var $ = require('jquery');
    var charts = require('charts');
   
    var dRadar = document.getElementById('dcharts');
    var xRadar = document.getElementById('xcharts');
    if (dRadar) {
      fundInflowCharts(dRadar);
      mui('.m-tabs-wrapper').on('tap','#dxzj .time-item',function(){
        $('.js-dRange').hide();
        $('#dxzj .time-item').removeClass('active');
        $(this).addClass('active');
        var index= $(this).index();
        if(index ===0){
          fundInflowCharts(dRadar);
        }else if(index === 1){
          fundBalanceCharts(dRadar);
        }else{
          $('.js-dRange').show();
          historyCharts(dRadar);
        }
      });
      //东向历史时间区间
      mui('.js-dRange').on('tap', ' .time-item', function () {
        $('.js-dRange .time-item').removeClass('active');
        $(this).addClass('active');
        historyCharts(dRadar);
      });
    }
    if (xRadar) {
      fundInflowCharts(xRadar);
      mui('.m-tabs-wrapper').on('tap', '#xxzj .time-item', function () {
        $('.js-xRange').hide();
        $('#xxzj .time-item').removeClass('active');
        $(this).addClass('active');
        var index = $(this).index();
        if (index === 0) {
          fundInflowCharts(xRadar);
        } else if (index === 1) {
          fundBalanceCharts(xRadar);
        } else {
          $('.js-xRange').show();
          historyCharts(xRadar);
        }
      });
      //西向历史时间区间
      mui('.js-xRange').on('tap', ' .time-item', function () {
        $('.js-xRange .time-item').removeClass('active');
        $(this).addClass('active');
        historyCharts(xRadar);
      });
    }
   
   
    /**资金流入 */
    function fundInflowCharts(elm){
      var myCharts = echarts.init(elm);
      var data = ["6.61", "6.62", "6.61", "6.62", "6.62", "6.66", "6.61", "6.62", "6.61", "6.64", "6.64", "6.66", "6.68", "6.67", "6.66", "6.63", "6.61", "6.60", "6.60", "6.59", "6.58", "6.58", "6.60", "6.59", "6.59", "6.60", "6.62", "6.60", "6.61", "6.60", "6.58", "6.59", "6.58", "6.58", "6.59", "6.60", "6.60", "6.60", "6.61", "6.55", "6.55", "6.56", "6.57", "6.57", "6.58", "6.58", "6.58", "6.57", "6.58", "6.58", "6.59", "6.60", "6.60", "6.59", "6.61", "6.65", "6.66", "6.67", "6.67", "6.65", "6.67", "6.68", "6.69", "6.66", "6.68", "6.68", "6.66", "6.65", "6.68", "6.65", "6.66", "6.64", "6.64", "6.64", "6.67", "6.70", "6.69", "6.67", "6.67", "6.66", "6.67", "6.67", "6.67", "6.66", "6.67", "6.66", "6.67", "6.68", "6.69", "6.69", "6.69", "6.69", "6.70", "6.76", "6.78", "6.76", "6.77", "6.79", "6.77", "6.74", "6.74", "6.75", "6.75", "6.73", "6.74", "6.75", "6.74", "6.75", "6.75", "6.72", "6.73", "6.72", "6.72", "6.71", "6.71", "6.72", "6.74", "6.75", "6.73", "6.76", "6.77", "6.77", "6.78", "6.78", "6.78", "6.77", "6.78", "6.78", "6.75", "6.79", "6.80", "6.80", "6.77", "6.77", "6.79", "6.80", "6.86", "6.82", "6.84", "6.82", "6.83", "6.83", "6.84", "6.87", "6.85", "6.85", "6.85", "6.83", "6.80", "6.82", "6.81", "6.80", "6.82", "6.81", "6.83", "6.82", "6.81", "6.80", "6.78", "6.78", "6.77", "6.78", "6.79", "6.79", "6.78", "6.77", "6.77", "6.78", "6.78", "6.81", "6.79", "6.78", "6.79", "6.78", "6.78", "6.80", "6.80", "6.85", "6.83", "6.85", "6.82", "6.80", "6.81", "6.83", "6.83", "6.81", "6.81", "6.82", "6.81", "6.82", "6.82", "6.81", "6.81", "6.81", "6.81", "6.79", "6.78", "6.79", "6.80", "6.79", "6.78", "6.79", "6.80", "6.78", "6.78", "6.78", "6.77", "6.77", "6.75", "6.74", "6.74", "6.75", "6.74", "6.75", "6.76", "6.75", "6.77", "6.76", "6.77", "6.75", "6.74", "6.76", "6.74", "6.74", "6.75", "6.74", "6.74", "6.74", "6.74", "6.74", "6.75", "6.75", "6.75", "6.75", "6.75", "6.75", "6.75", "6.75", "6.75", "6.75", "6.76"];
      var Dvalue = 0.2;
      var close = 6.74;
      charts.fstCharts(data, Dvalue, close, myCharts); 
    }
    /**资金余额 */
    function fundBalanceCharts(elm){
      var myCharts = echarts.init(elm);
      var data = ["11.97", "11.95", "12.03", "11.99", "12.00", "11.96", "11.96", "11.95", "11.96", "11.97", "11.91", "11.92", "11.96", "11.94", "11.88", "11.86", "11.82", "11.85", "11.81", "11.75", "11.81", "11.80", "11.75", "11.80", "11.84", "11.85", "11.85", "11.83", "11.84", "11.87", "11.84", "11.87", "11.86", "11.96", "11.89", "11.90", "11.92", "11.91", "11.90", "11.88", "11.90", "11.91", "11.94", "12.01", "12.00", "12.02", "12.01", "12.01", "11.97", "12.04", "12.12", "12.10", "12.10", "12.09", "12.11", "12.12", "12.18", "12.22", "12.20", "12.17", "12.20", "12.25", "12.27", "12.22", "12.22", "12.26", "12.26", "12.26", "12.23", "12.22", "12.22", "12.24", "12.27", "12.30", "12.41", "12.40", "12.36", "12.35", "12.32", "12.31", "12.31", "12.29", "12.27", "12.29", "12.31", "12.32", "12.30", "12.37", "12.37", "12.34", "12.36", "12.35", "12.45", "12.47", "12.46", "12.45", "12.47", "12.48", "12.44", "12.40", "12.41", "12.43", "12.41", "12.41", "12.43", "12.41", "12.42", "12.42", "12.44", "12.42", "12.38", "12.39", "12.39", "12.38", "12.38", "12.37", "12.37", "12.38", "12.37", "12.38", "12.44", "12.46", "12.47", "12.46", "12.46", "12.47", "12.48", "12.48", "12.49", "12.49", "12.47", "12.42", "12.44", "12.42", "12.45", "12.47", "12.46", "12.46", "12.46", "12.46", "12.48", "12.47", "12.50", "12.51", "12.50", "12.48", "12.47", "12.47", "12.46", "12.44", "12.47", "12.48", "12.47", "12.48", "12.48", "12.46", "12.45", "12.44", "12.43", "12.43", "12.41", "12.41", "12.44", "12.44", "12.43", "12.43", "12.41", "12.40", "12.39", "12.38", "12.35", "12.37", "12.36", "12.36", "12.38", "12.36", "12.38", "12.37", "12.38", "12.37", "12.40", "12.40", "12.38", "12.36", "12.36", "12.35", "12.34", "12.38", "12.36", "12.39", "12.39", "12.38", "12.38", "12.39", "12.39", "12.41", "12.40", "12.42", "12.41", "12.41", "12.43", "12.44", "12.47", "12.45", "12.44", "12.41", "12.41", "12.39", "12.42", "12.40", "12.37", "12.37", "12.37", "12.37", "12.34", "12.39", "12.34", "12.34", "12.35", "12.33", "12.32", "12.32", "12.32", "12.34", "12.34", "12.33", "12.32", "12.35", "12.33", "12.35", "12.38", "12.39", "12.38", "12.39", "12.37", "12.33", "12.38", "12.38", "12.38", "12.38", "12.38"];
      var Dvalue = 0.56;
      var close = 11.96;
      charts.fstCharts(data, Dvalue, close, myCharts); 
    }
    /**历史走势 */
    function historyCharts(elm){
      var myCharts = echarts.init(elm);
      var data = [100, 40, 200, 80, 100, 30,100, 40, 200, 80, 100, 30];
      var xData = ["2017-02-18", "2018-02-18", "2019-02-18"]
      charts.historyCharts(data, xData, myCharts); 
    }


  })(mui);
});